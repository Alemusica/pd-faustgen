#N canvas 342 174 481 520 10;
#X obj 12 15 cnv 15 360 17 empty empty faust.watcher 2 9 0 14 -233017
-66577 0;
#X obj 234 122 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 45 80 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1 1
;
#X msg 45 172 reload;
#X text 67 79 Start/Stop watching;
#X text 252 122 Errors;
#X obj 45 225 dac~;
#X text 51 130 Bang when file has changed, f 17;
#X text 94 169 Recompile the code when the file changed, f 22;
#X text 9 36 The first argument is the name of the FAUST DSP file to
watch. The second optional argument is the time in ms between each
file check.;
#X text 16 252 The abstraction sends a notification each time the FAUST
DSP file is saved (modified). Activates the watching when coding your
FAUST code in your favorite text editor to recompile automatically
the code.;
#X text 17 410 The abstraction uses the ggee library developed by Guenter
Geiger. If you don't have the ggee library installed \, use Deken to
download it., f 68;
#X text 17 460 This notification system has been inspired by the approach
offered by the FAUST implementation for Pure Data developed by Albert
Graef : https://github.com/agraef/pure-lang., f 69;
#X text 168 16 a notifier of FAUST file changes;
#X text 16 311 FAUST institution: GRAME;
#X text 16 325 FAUST website: faust.grame.fr;
#X text 122 340 Yann Orlarey \, Stéphane Letz \, Dominique Fober \,
...;
#X text 16 339 FAUST developers:;
#X text 16 387 faust~ developer: Pierre Guillot;
#X text 16 359 faust~ institutions: CICM - ANR MUSICOLL;
#X text 16 373 fauts~ website: github.com/grame-cncm/faust-pd;
#X obj 45 203 faust~ examples/dummy;
#X obj 45 101 faust.watcher examples/dummy 100;
#X connect 2 0 22 0;
#X connect 3 0 21 0;
#X connect 21 0 6 0;
#X connect 21 0 6 1;
#X connect 22 0 3 0;
#X connect 22 1 1 0;
